{"ast":null,"code":"import _slicedToArray from \"/Users/nicjaws/Documents/GitHub/React/todo-graphql/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nicjaws/Documents/GitHub/React/todo-graphql/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nconst READ_TODOS = gql`\n  query todos{\n    todos {\n      id\n      text\n      completed\n    }\n  }\n`;\nconst CREATE_TODO = gql`\n  mutation CreateTodo($text: String!) {\n    createTodo(text: $text)\n  }\n`;\nconst REMOVE_TODO = gql`\n  mutation RemoveTodo($id: String!) {\n    removeTodo(id: $id)\n  }\n`;\nconst UPDATE_TODO = gql`\n  mutation UpdateTodo($id: String!) {\n    updateTodo(id: $id)\n  }\n`;\n\nfunction App() {\n  let input;\n\n  const _useQuery = useQuery(READ_TODOS),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  const _useMutation = useMutation(CREATE_TODO),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        createTodo = _useMutation2[0];\n\n  const _useMutation3 = useMutation(REMOVE_TODO),\n        _useMutation4 = _slicedToArray(_useMutation3, 1),\n        deleteTodo = _useMutation4[0];\n\n  const _useMutation5 = useMutation(UPDATE_TODO),\n        _useMutation6 = _slicedToArray(_useMutation5, 1),\n        updateTodo = _useMutation6[0];\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"ERROR\");\n  if (!data) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Not found\");\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Create New Todo\"), React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      createTodo({\n        variables: {\n          text: input.value\n        }\n      });\n      input.value = '';\n      window.location.reload();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"Enter todo\",\n    ref: node => {\n      input = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-primary px-5 my-2\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, data.todos.map(todo => React.createElement(\"li\", {\n    key: todo.id,\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: todo.completed ? \"done\" : \"pending\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, todo.text), React.createElement(\"button\", {\n    className: \"btn btn-sm btn-danger rounded-circle float-right\",\n    onClick: () => {\n      deleteTodo({\n        variables: {\n          id: todo.id\n        }\n      });\n      window.location.reload();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"X\"), React.createElement(\"button\", {\n    className: `btn btn-sm float-right ${todo.completed ? \"btn-success\" : \"btn-info\"}`,\n    onClick: () => {\n      updateTodo({\n        variables: {\n          id: todo.id\n        }\n      });\n      window.location.reload();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, todo.completed ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Completed\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Not completed\"))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nicjaws/Documents/GitHub/React/todo-graphql/client/src/App.js"],"names":["React","useQuery","useMutation","gql","READ_TODOS","CREATE_TODO","REMOVE_TODO","UPDATE_TODO","App","input","data","loading","error","createTodo","deleteTodo","updateTodo","e","preventDefault","variables","text","value","window","location","reload","node","todos","map","todo","id","completed"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,UAAU,GAAGD,GAAI;;;;;;;;CAAvB;AAUA,MAAME,WAAW,GAAGF,GAAI;;;;CAAxB;AAMA,MAAMG,WAAW,GAAGH,GAAI;;;;CAAxB;AAMA,MAAMI,WAAW,GAAGJ,GAAI;;;;CAAxB;;AAMA,SAASK,GAAT,GAAe;AACb,MAAIC,KAAJ;;AADa,oBAEoBR,QAAQ,CAACG,UAAD,CAF5B;AAAA,QAELM,IAFK,aAELA,IAFK;AAAA,QAECC,OAFD,aAECA,OAFD;AAAA,QAEUC,KAFV,aAEUA,KAFV;;AAAA,uBAGQV,WAAW,CAACG,WAAD,CAHnB;AAAA;AAAA,QAGNQ,UAHM;;AAAA,wBAIQX,WAAW,CAACI,WAAD,CAJnB;AAAA;AAAA,QAINQ,UAJM;;AAAA,wBAKQZ,WAAW,CAACK,WAAD,CALnB;AAAA;AAAA,QAKNQ,UALM;;AAOb,MAAIJ,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAI,CAACF,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEX,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAM,IAAA,QAAQ,EAAEM,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACAJ,MAAAA,UAAU,CAAC;AAAEK,QAAAA,SAAS,EAAE;AAAEC,UAAAA,IAAI,EAAEV,KAAK,CAACW;AAAd;AAAb,OAAD,CAAV;AACAX,MAAAA,KAAK,CAACW,KAAN,GAAc,EAAd;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,WAAW,EAAC,YAAxD;AAAqE,IAAA,GAAG,EAAEC,IAAI,IAAI;AAAEf,MAAAA,KAAK,GAAGe,IAAR;AAAe,KAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,IAAI,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CAFF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,IAAI,CAACe,KAAL,CAAWC,GAAX,CAAgBC,IAAD,IACd;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,IAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAED,IAAI,CAACE,SAAL,GAAiB,MAAjB,GAA0B,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuDF,IAAI,CAACR,IAA5D,CADF,EAEE;AAAQ,IAAA,SAAS,EAAC,kDAAlB;AAAqE,IAAA,OAAO,EAAE,MAAM;AAClFL,MAAAA,UAAU,CAAC;AAAEI,QAAAA,SAAS,EAAE;AAAEU,UAAAA,EAAE,EAAED,IAAI,CAACC;AAAX;AAAb,OAAD,CAAV;AACAP,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAME;AAAQ,IAAA,SAAS,EAAG,0BAAyBI,IAAI,CAACE,SAAL,GAAiB,aAAjB,GAAiC,UAAW,EAAzF;AAA4F,IAAA,OAAO,EAAE,MAAM;AACzGd,MAAAA,UAAU,CAAC;AAAEG,QAAAA,SAAS,EAAE;AAAEU,UAAAA,EAAE,EAAED,IAAI,CAACC;AAAX;AAAb,OAAD,CAAV;AACAP,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGII,IAAI,CAACE,SAAL,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjB,GAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAH9C,CANF,CADD,CADH,CAXF,CADF;AA6BD;;AAED,eAAerB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\n\nconst READ_TODOS = gql`\n  query todos{\n    todos {\n      id\n      text\n      completed\n    }\n  }\n`;\n\nconst CREATE_TODO = gql`\n  mutation CreateTodo($text: String!) {\n    createTodo(text: $text)\n  }\n`;\n\nconst REMOVE_TODO = gql`\n  mutation RemoveTodo($id: String!) {\n    removeTodo(id: $id)\n  }\n`;\n\nconst UPDATE_TODO = gql`\n  mutation UpdateTodo($id: String!) {\n    updateTodo(id: $id)\n  }\n`;\n\nfunction App() {\n  let input;\n  const { data, loading, error } = useQuery(READ_TODOS);\n  const [createTodo] = useMutation(CREATE_TODO);\n  const [deleteTodo] = useMutation(REMOVE_TODO);\n  const [updateTodo] = useMutation(UPDATE_TODO);\n\n  if (loading) return <p>loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n\n  return (\n    <div className=\"app\">\n      <h3>Create New Todo</h3>\n      <form onSubmit={e => {\n        e.preventDefault();\n        createTodo({ variables: { text: input.value } });\n        input.value = '';\n        window.location.reload();\n      }}>\n        <input className=\"form-control\" type=\"text\" placeholder=\"Enter todo\" ref={node => { input = node; }}></input>\n        <button className=\"btn btn-primary px-5 my-2\" type=\"submit\">Submit</button>\n      </form>\n      <ul>\n        {data.todos.map((todo) =>\n          <li key={todo.id} className=\"w-100\">\n            <span className={todo.completed ? \"done\" : \"pending\"}>{todo.text}</span>\n            <button className=\"btn btn-sm btn-danger rounded-circle float-right\" onClick={() => {\n              deleteTodo({ variables: { id: todo.id } });\n              window.location.reload();\n            }}>X</button>\n            <button className={`btn btn-sm float-right ${todo.completed ? \"btn-success\" : \"btn-info\"}`} onClick={() => {\n              updateTodo({ variables: { id: todo.id } });\n              window.location.reload();\n            }}>{todo.completed ? <span>Completed</span> : <span>Not completed</span>}</button>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}